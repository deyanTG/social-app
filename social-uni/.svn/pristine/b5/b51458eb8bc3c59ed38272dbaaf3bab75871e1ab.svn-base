package com.connectik.cloverlead.dao;

import com.connectik.cloverlead.model.Company;
import com.connectik.cloverlead.model.User;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.Collection;
import java.util.List;

public interface CompanyRepository extends JpaRepository<Company, Long> {

    Page<Company> findByNameContainingIgnoreCase(String name, Pageable pageable);

    @Query("SELECT uc.user FROM user_company uc WHERE uc.company.id = :company_id ")
    Page<User> getUsers(@Param("company_id") Long id, Pageable pageable);

    @Query(value = "SELECT c FROM company c " +
            "LEFT JOIN FETCH c.createdBy " +
            "LEFT JOIN FETCH c.updatedBy " +
            "LEFT JOIN FETCH c.opportunities " +
            "LEFT JOIN FETCH c.industries " +
            "LEFT JOIN FETCH c.interests " +
            "LEFT JOIN FETCH c.sectors " +
            "LEFT JOIN FETCH c.specialties " +
            "LEFT JOIN FETCH c.chamber " +
            "LEFT JOIN FETCH c.photos " +
            "LEFT JOIN FETCH c.videos " +
            "WHERE c.id = :id " +
            "ORDER BY c.name asc, c.id asc")
    Company get(@Param("id") Long id);

    @Query("SELECT DISTINCT c FROM company c " +
            "LEFT JOIN FETCH c.createdBy " +
            "LEFT JOIN FETCH c.updatedBy " +
            "LEFT JOIN FETCH c.opportunities " +
            "LEFT JOIN FETCH c.industries " +
            "LEFT JOIN FETCH c.interests " +
            "LEFT JOIN FETCH c.sectors " +
            "LEFT JOIN FETCH c.specialties " +
            "LEFT JOIN FETCH c.chamber " +
            "LEFT JOIN FETCH c.photos " +
            "LEFT JOIN FETCH c.videos " +
            "WHERE c.id in (:ids) ")
    List<Company> fetchAdditionalInfo(@Param("ids") Collection<Long> ids);
}
