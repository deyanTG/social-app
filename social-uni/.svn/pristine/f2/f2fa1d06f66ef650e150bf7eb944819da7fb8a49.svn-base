package com.connectik.cloverlead.dao;


import com.connectik.cloverlead.model.Opportunity;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Set;

public interface OpportunityRepository extends JpaRepository<Opportunity, Long> {

    @Query("SELECT DISTINCT o FROM opportunity o " +
            "LEFT JOIN FETCH o.specialties s " +
            "LEFT JOIN FETCH o.keywords i " +
            "WHERE o.company.id = :cid AND o.startDate < :now AND o.endDate > :now")
    Set<Opportunity> findActiveForCompany(@Param("cid") Long companyId, @Param("now") LocalDateTime now);

    @Query("SELECT DISTINCT o FROM opportunity o " +
            "LEFT JOIN FETCH o.createdBy " +
            "LEFT JOIN FETCH o.updatedBy " +
            "LEFT JOIN FETCH o.specialties " +
            "LEFT JOIN FETCH o.keywords " +
            "LEFT JOIN FETCH o.company " +
            "WHERE o.company.id = :cid ")
    Set<Opportunity> findByCompany(@Param("cid") Long companyId);

    @Query("SELECT DISTINCT o FROM opportunity o " +
            "LEFT JOIN FETCH o.createdBy " +
            "LEFT JOIN FETCH o.updatedBy " +
            "LEFT JOIN FETCH o.specialties " +
            "LEFT JOIN FETCH o.keywords " +
            "LEFT JOIN FETCH o.company " +
            "WHERE o.id in (:ids)")
    List<Opportunity> findAndFetchAll(@Param("ids") Iterable<Long> ids);
	 
	 
	 @Query("SELECT DISTINCT o FROM opportunity o " +
             "LEFT JOIN FETCH o.createdBy " +
             "LEFT JOIN FETCH o.updatedBy " +
	         "LEFT JOIN FETCH o.specialties " +
	         "LEFT JOIN FETCH o.keywords " +
	         "LEFT JOIN FETCH o.company " +
	         "WHERE o.id = :id")
	 Opportunity findAndFetchAll(@Param("id") Long id);
}
