package com.connectik.cloverlead.model;

import com.connectik.cloverlead.validation.ValidationGroups;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.jsondoc.core.annotation.ApiObject;
import org.jsondoc.core.annotation.ApiObjectField;
import org.jsondoc.core.pojo.ApiVisibility;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import javax.persistence.*;
import javax.validation.constraints.Null;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

@Entity(name = "company")
@Table(name = "company")
@EntityListeners(AuditingEntityListener.class)
@ApiObject(visibility = ApiVisibility.PUBLIC, name = "Company")
public class Company {

    @Id
    @GeneratedValue
    @ApiObjectField(name = "id")
    @Null(groups = ValidationGroups.Company.Create.class)
    private Long id;

    @ApiObjectField(processtemplate = false)
    @JsonIgnore
    @CreatedBy
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "created_by")
    private User createdBy;

    @ApiObjectField(processtemplate = false)
    @JsonIgnore
    @LastModifiedBy
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "updated_by")
    private User updatedBy;

    @CreatedDate
    @Column(name = "created_at")
    private Date createdAt;

    @LastModifiedDate
    @Column(name = "updated_at")
    private Date updatedAt;

    @Column(name = "name")
    @ApiObjectField(name = "name")
    @Size(min = 1, max = 300)
    private String name;

    @ApiObjectField(name = "chamber")
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "chamber_id")
    private Chamber chamber;

    @ElementCollection(fetch = FetchType.LAZY)
    @CollectionTable(name = "line_of_business", joinColumns = @JoinColumn(name = "company_id"))
    @Column(name = "name")
    private Set<String> lineOfBusiness = new HashSet<>();

    @ElementCollection(fetch = FetchType.LAZY)
    @CollectionTable(name = "industry", joinColumns = @JoinColumn(name = "company_id"))
    @Column(name = "name")
    private Set<String> industries = new HashSet<>();

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Chamber getChamber() {
        return chamber;
    }

    public void setChamber(Chamber chamber) {
        this.chamber = chamber;
    }

    public Set<String> getLineOfBusiness() {
        return lineOfBusiness;
    }

    public void setLineOfBusiness(Set<String> lineOfBusiness) {
        this.lineOfBusiness = lineOfBusiness;
    }

    public Set<String> getIndustries() {
        return industries;
    }

    public void setIndustries(Set<String> industries) {
        this.industries = industries;
    }

    public Date getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public User getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(User createdBy) {
        this.createdBy = createdBy;
    }

    public Date getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    public User getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedBy(User updatedBy) {
        this.updatedBy = updatedBy;
    }
}
