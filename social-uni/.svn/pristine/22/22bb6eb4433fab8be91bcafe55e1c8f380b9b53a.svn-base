package com.connectik.cloverlead.model;

import org.springframework.util.StringUtils;

import javax.persistence.Column;
import javax.persistence.Embeddable;

@Embeddable
public class Address {

	@Column(name = "city")
	private String city;

	@Column(name = "state")
	private String state;

	@Column(name = "country")
	private String country;

	@Column(name = "zip")
	private String zip;

	@Column(name = "street1")
	private String street1;

	@Column(name = "street2")
	private String street2;

	@Column(name = "geo_location")
	private String geoLocation;

	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}

	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public String getZip() {
		return zip;
	}

	public void setZip(String zip) {
		this.zip = zip;
	}

	public String getStreet1() {
		return street1;
	}

	public void setStreet1(String street1) {
		this.street1 = street1;
	}

	public String getStreet2() {
		return street2;
	}

	public void setStreet2(String street2) {
		this.street2 = street2;
	}

	@Override
	public String toString() {
		return (!StringUtils.isEmpty(street2) ? street2 + ", " : "")
				+ (!StringUtils.isEmpty(street1) ? street1 + ", " : "")
				+ (!StringUtils.isEmpty(city) ? city + ", " : "")
				+ (!StringUtils.isEmpty(state) ? state + ", " : "")
				+ (!StringUtils.isEmpty(zip) ? zip : "")
				+ (!StringUtils.isEmpty(country) ? country : "");
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;

		Address address = (Address) o;

		if (city != null ? !city.equals(address.city) : address.city != null) return false;
		if (state != null ? !state.equals(address.state) : address.state != null) return false;
		if (country != null ? !country.equals(address.country) : address.country != null) return false;
		if (zip != null ? !zip.equals(address.zip) : address.zip != null) return false;
		if (street1 != null ? !street1.equals(address.street1) : address.street1 != null) return false;
		if (street2 != null ? !street2.equals(address.street2) : address.street2 != null) return false;
		return geoLocation != null ? geoLocation.equals(address.geoLocation) : address.geoLocation == null;

	}

	@Override
	public int hashCode() {
		int result = city != null ? city.hashCode() : 0;
		result = 31 * result + (state != null ? state.hashCode() : 0);
		result = 31 * result + (country != null ? country.hashCode() : 0);
		result = 31 * result + (zip != null ? zip.hashCode() : 0);
		result = 31 * result + (street1 != null ? street1.hashCode() : 0);
		result = 31 * result + (street2 != null ? street2.hashCode() : 0);
		result = 31 * result + (geoLocation != null ? geoLocation.hashCode() : 0);
		return result;
	}

	public String getGeoLocation() {
		return geoLocation;
	}

	public void setGeoLocation(String geoLocation) {
		this.geoLocation = geoLocation;
	}
}
